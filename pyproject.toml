[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "websearch"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Francesco Vertemati", email = "verte.fra@gmail.com"},
]
license = {text = "MIT"}

dependencies = [
    "diskcache>=5.6.3",
    "grequests>=0.7.0",
    "langgraph>=0.3.21",
    "playwright>=1.51.0",
    "pydantic-ai>=0.0.46",
    "pydantic-settings>=2.8.1",
    "pymilvus[model]>=2.5.6",
    "requests>=2.32.3",
    "seleniumbase>=4.36.4",
    "undetected-chromedriver>=3.5.5",
]

[dependency-groups]
dev = [
    "ipython>=9.0.2",
    "ruff>=0.11.4",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`), a subset of the pycodestyle (`E`), isort (`I`), and docstring (`D`) checks
select = ["E4", "E7", "E9", "F", "I", "D"]  # Added "D" for docstring checking
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
# Configure isort settings
known-first-party = ["websearch"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Don't require docstrings in __init__ files
"__init__.py" = ["D104", "E501"]
